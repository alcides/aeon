import "List.ae";

type Tuple a b;

# Creates a new tuple from two values.
def Tuple_new(x: a) (y: b): (Tuple a b) { native "(x, y)" }

# Returns the first element of the tuple.
def Tuple_fst(t: (Tuple a b)): a { native "t[0]" }

# Returns the second element of the tuple.
def Tuple_snd(t: (Tuple a b)): b { native "t[1]" }

# Swaps the elements of the tuple.
def Tuple_swap(t: (Tuple a b)): (Tuple b a) { native "(t[1], t[0])" }

# Maps a function over the first element of the tuple.
def Tuple_map_fst(f: (v: a) -> c) (t: (Tuple a b)): (Tuple c b) { native "(f(t[0]), t[1])" }

# Maps a function over the second element of the tuple.
def Tuple_map_snd(f: (v: b) -> c) (t: (Tuple a b)): (Tuple a c) { native "(t[0], f(t[1]))" }

# Checks if two tuples are equal.
def Tuple_eq(t1: (Tuple a b)) (t2: (Tuple a b)): Bool { native "t1 == t2" }

# Returns the length of the tuple.
def Tuple_length(t: (Tuple a b)): Int { native "len(t)" }
