import List;

def random : Unit = native_import "random";

def generateList : List = native "lambda num_samples=100, max_length=10: [[random.randint(0, 100) for _ in range(random.randint(0, max_length))]for _ in range(num_samples)]" ;

def generateInt : Int = native "lambda num_samples=100: [random.randint(0, 100) for _ in range(num_samples)]" ;

def generateFloat : Float = native "lambda num_samples=100: [random.uniform(0, 100) for _ in range(num_samples)]";

def forAllLists : (function:(a: List) -> Bool) -> Float = native "lambda f:  (sum(1 for lst in generateList() if f(lst)) / len(generateList())) * 100";

def forAllInts : (function:(a: Int) -> Bool) -> Float = native "lambda f:  (sum(1 for i in generateInt() if f(i)) / len(generateInt())) * 100";

def forAllFloats : (function:(a: Float) -> Bool) -> Float = native "lambda f:  (sum(1 for i in generateFloat() if f(i)) / len(generateFloat())) * 100";
