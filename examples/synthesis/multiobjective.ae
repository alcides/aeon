def hard_constraint : (x:Int) -> Bool = uninterpreted;

def soft_constraint (n: Int) : Int {
    (n * n) - 5
}

def other_soft_constraint (n: Int) : Int {
    n + 4
}

@minimize_int(soft_constraint (fun 10))
@minimize_int(other_soft_constraint (fun 21))
def fun (i:Int | i >= 10) : {v:Int | v > 10 }  {
    ?hole
}



def main (args: Int) : Unit {
    print (fun 42)
}
