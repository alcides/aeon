# Dice Game (PE) Peter has an n sided die and Colin has an m
# sided die. If they both roll their dice at the same time, return
# the probability that Peter rolls strictly higher than Colin.
# input : 2 integers in [1, 1000]
# output : float
# -- working--
# need some work in aeon

def mult ( n:Int , m:Int ) : Int { n * m }

def peter_wins: ( n:Int ) -> ( m:Int ) -> Int = native "lambda x: lambda y: sum((x - i) * y for i in range(1, x + 1)) " ;

# add suport to returning Float
# def dice_game ( n : {x:Int | 1 <= x && x <= 10000} , m : {y:Int | 1 <= y && y <= 10000}) : Float { (peter_wins n  m ) / (mult n m)  }

# when I run the code and the ?hole in main is dice_game(6)(6) it should return and Int but returned a Float 2.5
def dice_game ( n : {x:Int | 1 <= x && x <= 10000} , m : {y:Int | 1 <= y && y <= 10000}) : Int { (peter_wins n  m ) / (mult n m)  }
