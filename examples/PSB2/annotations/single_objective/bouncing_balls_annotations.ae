# currently this is not working
import Math;
import psb2 from PSB2;
import extract_train_data from PSB2;
import load_dataset from PSB2;
import get_input_list from PSB2;
import unpack_train_data from PSB2;
import get_output_list from PSB2;
import get_bb_synth_values from PSB2;
import mean_absolute_error from PSB2;

type Unit;

def train: TrainData = extract_train_data (load_dataset "bouncing-balls" 200 200);
def input_list : List = get_input_list (unpack_train_data train);
def expected_values : List = get_output_list (unpack_train_data train);

@minimize_float( mean_absolute_error (get_bb_synth_values input_list synth) (expected_values))
def synth (a:Float , b:Float , c:Int) : Float
    {
        (?hole:Float)
    }
