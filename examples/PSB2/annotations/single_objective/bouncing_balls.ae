import "Math.ae";
import extract_train_data from "PSB2.ae";
import get_input_list from "PSB2.ae";
import get_output_list from "PSB2.ae";
import calculate_list_errors from "PSB2.ae";
import get_bb_synth_values from "PSB2.ae";
import unpack_train_data from "PSB2.ae";
import load_dataset from "PSB2.ae";
import mean_absolute_error from "PSB2.ae";


def train: TrainData =  extract_train_data ( load_dataset "bouncing-balls" 200 200);

def  input_list : List =  get_input_list ( unpack_train_data train);

def  expected_values : List =  get_output_list ( unpack_train_data train);

@hide(extract_train_data,
            get_input_list,
            get_output_list,
            unpack_train_data,
            load_dataset,
            get_bb_synth_values,
            calculate_list_errors)
@minimize_float(  mean_absolute_error ( get_bb_synth_values  input_list synth) ( expected_values))
def synth (a:Float) (b:Float) (c:Int) : Float
    {
        (?hole:Float)
    }
