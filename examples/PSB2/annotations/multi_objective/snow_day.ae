import "Math.ae";
import extract_train_data from "PSB2.ae";
import load_dataset from "PSB2.ae";

def isZero : (n: Int) -> Bool = \n -> n == 0;

def train: TrainData = extract_train_data (load_dataset "snow-day" 200 200);
def calculate_snow_day_errors : (train : TrainData) -> (f:(a: Int) -> (b: Float) -> (c: Float) -> (d: Float) -> Float)  -> List  =  native " lambda data: lambda func: [abs(func(x[0])(x[1])(x[2])(x[3]) - y[0]) for x , y in data]";


@hide(extract_train_data,
            load_dataset,
            train,
            calculate_snow_day_errors)
@multi_minimize_float(calculate_snow_day_errors train synth)
def synth ( n :Int) (m :Float) (t :Float) (p :Float) : Float {
    (?hole:Float)
}
