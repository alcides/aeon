# Given two integers, return the largest integer that
# divides each of the integers evenly.
# input : 2 integers in [1, 1000000]
# output : integer
# --not- working - recursion problem--
# RecursionError: maximum recursion depth exceeded in comparison

def gcd ( n:Int, z:Int) : Int {
    if z == 0 then n else (gcd(z)(n % z))
}

# def largest_common_divisor ( n :{x:Int | 1 <= x && x <= 1000000},  m :{y:Int | 1 <= y && y <= 1000000}) : Int { gcd n m }

def main (x:Top) : Int {
    gcd(15)(5)
}
