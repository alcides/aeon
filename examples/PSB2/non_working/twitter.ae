# Given two integers, return the largest integer that
# divides each of the integers evenly.
# input : 2 integers in [1, 1000000]
# output : integer
# --not- working - recursion problem--
# RecursionError: maximum recursion depth exceeded in comparison

import String;
import PSB2;

#constants
def constant_i0 : Int = 0;
def constant_i140 : Int = 140;
def constant_s : String = "Too many characters";
def constant_s2 : String = "You didn’t type anything";
def constant_s3 : String = "your tweet has ";
def constant_s4 : String = " characters";

def validate_tweet (tweet: String) : String {
    tweet_length = String_len(tweet);
    if tweet_length == 0 then
        "You didn’t type anything"
    else
        if tweet_length > 140 then
            "Too many characters"
        else
            tweet_length_str = String_intToString(tweet_length);
            String_concat (String_concat "Your tweet has " tweet_length_str)   " characters"
    }
def synth_tweet (tweet:String) : String {(?hole:String)}

def train: TrainData = extract_train_data (load_dataset "twitter" 200 200);
def input_list : List = get_input_list (unpack_train_data train);
def expected_values : List = get_output_list (unpack_train_data train);

def fitness(): Float {
    ds = load_dataset "twitter" 200 200;
    train = extract_train_data ds;
    unpacked_data = unpack_train_data train;
    input_list = get_input_list unpacked_data;
    actual_values_str = join_string_list( get_tt_synth_values input_list synth_tweet );
    expected_values_str = join_string_list(expected_values);
    str_distance = String_distance expected_values_str actual_values_str;
    str_distance
}
