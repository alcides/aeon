# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    tags: ["*"]


jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Install the latest version of uv and set the python version
        uses: astral-sh/setup-uv@v4
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: |
            **/requirements*.txt
            **/pyproject.toml
      - name: Create venv
        run: |
          uv venv
      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then uv pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then uv pip install -r requirements-dev.txt; fi
      - name: Check install
        run: |
          uv pip install  -e .
      - name: Build package
        run: uv build
      - name: Publish
        run: uv publish -t ${{ secrets.PYPI_API_TOKEN }}
